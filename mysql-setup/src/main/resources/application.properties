# add mysql query connection string, with the name of your database
# auto create your database/schema in mysql with `?createDatabaseIfNotExist=true`
spring.datasource.url=jdbc:mysql://localhost:3306/database_example?createDatabaseIfNotExist=true


# credentials for your database, this should be secret in production repos.
# make sure this user actually exists in your database!
spring.datasource.username=developer
spring.datasource.password=dev123


# By default, JPA databases are automatically created only if you use an embedded database (H2, HSQL, or Derby).
# Since we are using MySql and want auto creation / auto drop, we have to explicitly define this
# this allows the auto generation of our tables that are marked as entities
# `update` allows us to define a schema.sql and run the sql there, however, because schema.sql runs before
# entity creation, the columns and all our tables must be defined in schema.sql
spring.jpa.hibernate.ddl-auto=update


# explicitly declare database vendor.
# allows you to use schema.sql or data-mysql.sql
# which gives you the ability to run platform specific scripts
spring.sql.init.platform=mysql


# always initialize the DataSource regardless of its type
spring.sql.init.mode=always